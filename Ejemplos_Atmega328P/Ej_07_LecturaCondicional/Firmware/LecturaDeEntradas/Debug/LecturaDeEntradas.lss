
LecturaDeEntradas.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000015e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000010a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000015e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000190  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  000001d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000069c  00000000  00000000  000001f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000061b  00000000  00000000  00000894  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000027c  00000000  00000000  00000eaf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  0000112c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000039e  00000000  00000000  00001160  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000018  00000000  00000000  000014fe  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 59 00 	call	0xb2	; 0xb2 <main>
  78:	0c 94 83 00 	jmp	0x106	; 0x106 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <ports_init>:

void ports_init(void)
{
//--Definir Entradas y Salidas
//-Inputs
	BTN_DDRX &= ~(1<<BTN_0);// solo PORTD4 es una entrada
  80:	8a b1       	in	r24, 0x0a	; 10
  82:	8f 7e       	andi	r24, 0xEF	; 239
  84:	8a b9       	out	0x0a, r24	; 10
	BTN_DDRX &= ~(1<<BTN_1);// solo PORTD4 es una entrada
  86:	8a b1       	in	r24, 0x0a	; 10
  88:	87 7f       	andi	r24, 0xF7	; 247
  8a:	8a b9       	out	0x0a, r24	; 10
	
//-Outputs
	LED_DDRX |=  (1<<LED_0);// solo PORTB4 es una salida
  8c:	84 b1       	in	r24, 0x04	; 4
  8e:	80 61       	ori	r24, 0x10	; 16
  90:	84 b9       	out	0x04, r24	; 4
	LED_DDRX |=  (1<<LED_1);// solo PORTB4 es una salida
  92:	84 b1       	in	r24, 0x04	; 4
  94:	88 60       	ori	r24, 0x08	; 8
  96:	84 b9       	out	0x04, r24	; 4
	
//--Init Entradas y Salidas
//-Inputs
	BTN_PORTX &= ~(1<<BTN_0);//Pull-down
  98:	8b b1       	in	r24, 0x0b	; 11
  9a:	8f 7e       	andi	r24, 0xEF	; 239
  9c:	8b b9       	out	0x0b, r24	; 11
	BTN_PORTX &= ~(1<<BTN_1);//Pull-down
  9e:	8b b1       	in	r24, 0x0b	; 11
  a0:	87 7f       	andi	r24, 0xF7	; 247
  a2:	8b b9       	out	0x0b, r24	; 11

//-Outputs
	LED_PORTX &= ~(1<<LED_0);//Output Low (Sink)
  a4:	85 b1       	in	r24, 0x05	; 5
  a6:	8f 7e       	andi	r24, 0xEF	; 239
  a8:	85 b9       	out	0x05, r24	; 5
	LED_PORTX &= ~(1<<LED_1);//Output Low (Sink)
  aa:	85 b1       	in	r24, 0x05	; 5
  ac:	87 7f       	andi	r24, 0xF7	; 247
  ae:	85 b9       	out	0x05, r24	; 5
  b0:	08 95       	ret

000000b2 <main>:

// ------- MAIN -------- //
int main(void)
{
// -------- Inits --------- //	
    ports_init();//llama a la funcion
  b2:	0e 94 40 00 	call	0x80	; 0x80 <ports_init>
	//0b00000001 = 0b00000001
	   //0bXXXXXXXX	& 0b00001000
	   //0b0000X000	& 0b00001000
	   //0b00000000	& 0b00001000 = 0
	  //0b00000100	& 0b00001000 = 1
		if(!(BTN_0_PRESS)&&!(BTN_1_PRESS))
  b6:	4c 99       	sbic	0x09, 4	; 9
  b8:	09 c0       	rjmp	.+18     	; 0xcc <main+0x1a>
  ba:	4b 99       	sbic	0x09, 3	; 9
  bc:	07 c0       	rjmp	.+14     	; 0xcc <main+0x1a>
		{
			LED_0_ON;
  be:	85 b1       	in	r24, 0x05	; 5
  c0:	80 61       	ori	r24, 0x10	; 16
  c2:	85 b9       	out	0x05, r24	; 5
			LED_1_ON;
  c4:	85 b1       	in	r24, 0x05	; 5
  c6:	88 60       	ori	r24, 0x08	; 8
  c8:	85 b9       	out	0x05, r24	; 5
  ca:	f5 cf       	rjmp	.-22     	; 0xb6 <main+0x4>
		}
			else if (!(BTN_0_PRESS)&&(BTN_1_PRESS))
  cc:	4c 99       	sbic	0x09, 4	; 9
  ce:	09 c0       	rjmp	.+18     	; 0xe2 <main+0x30>
  d0:	4b 9b       	sbis	0x09, 3	; 9
  d2:	07 c0       	rjmp	.+14     	; 0xe2 <main+0x30>
			{
				LED_0_ON;
  d4:	85 b1       	in	r24, 0x05	; 5
  d6:	80 61       	ori	r24, 0x10	; 16
  d8:	85 b9       	out	0x05, r24	; 5
				LED_1_OFF;
  da:	85 b1       	in	r24, 0x05	; 5
  dc:	87 7f       	andi	r24, 0xF7	; 247
  de:	85 b9       	out	0x05, r24	; 5
  e0:	ea cf       	rjmp	.-44     	; 0xb6 <main+0x4>
			}
				else if ((BTN_0_PRESS)&&!(BTN_1_PRESS))
  e2:	4c 9b       	sbis	0x09, 4	; 9
  e4:	09 c0       	rjmp	.+18     	; 0xf8 <main+0x46>
  e6:	4b 99       	sbic	0x09, 3	; 9
  e8:	07 c0       	rjmp	.+14     	; 0xf8 <main+0x46>
				{
					LED_0_OFF;
  ea:	85 b1       	in	r24, 0x05	; 5
  ec:	8f 7e       	andi	r24, 0xEF	; 239
  ee:	85 b9       	out	0x05, r24	; 5
					LED_1_ON;
  f0:	85 b1       	in	r24, 0x05	; 5
  f2:	88 60       	ori	r24, 0x08	; 8
  f4:	85 b9       	out	0x05, r24	; 5
  f6:	df cf       	rjmp	.-66     	; 0xb6 <main+0x4>
				}
					else
					{
						LED_0_OFF;
  f8:	85 b1       	in	r24, 0x05	; 5
  fa:	8f 7e       	andi	r24, 0xEF	; 239
  fc:	85 b9       	out	0x05, r24	; 5
						LED_1_OFF;
  fe:	85 b1       	in	r24, 0x05	; 5
 100:	87 7f       	andi	r24, 0xF7	; 247
 102:	85 b9       	out	0x05, r24	; 5
 104:	d8 cf       	rjmp	.-80     	; 0xb6 <main+0x4>

00000106 <_exit>:
 106:	f8 94       	cli

00000108 <__stop_program>:
 108:	ff cf       	rjmp	.-2      	; 0x108 <__stop_program>
